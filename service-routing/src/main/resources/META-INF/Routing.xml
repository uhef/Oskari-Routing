<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Routing">

    <typeAlias alias="RouteEndPoints" type="fi.nls.oskari.routing.RouteEndPoints"/>
    <typeAlias alias="DistanceNode" type="fi.nls.oskari.routing.DistanceNode"/>
    <typeAlias alias="Coordinates" type="fi.nls.oskari.routing.Coordinates"/>

    <select id="calculateRoute" resultClass="Object" parameterClass="RouteEndPoints">
        select geom2d
        from hkiroads
        where gid in (
          select id2 from pgr_astar(
            'select gid as id, cast(source as int4), cast(target as int4), cost, x1, y1, x2, y2 from hkiroads',
            oskari_routing_closest_node(st_geomfromtext('POINT($startLon$ $startLat$)',3067)),
            oskari_routing_closest_node(st_geomfromtext('POINT($endLon$ $endLat$)',3067)),
            false,
            false))
    </select>

    <select id="closestNode" resultClass="Integer" parameterClass="Coordinates">
      select oskari_routing_closest_node(st_geomfromtext('POINT($lon$ $lat$)',3067))
    </select>

    <select id="hasNeighbors" resultClass="Object" parameterClass="Integer">
        select (
          select count(*) from hkiroads where (
            source = #node# and (yksisuunta = 0 or yksisuunta = 1)) or (
            target = #node# and (yksisuunta = 0 or yksisuunta = 2))
          ) > 0;
    </select>

    <select id="neighbors" resultClass="DistanceNode" parameterClass="Integer">
        select node, edge, lon, lat, distance from (
          select source as node, gid as edge, x1 as lon, y1 as lat, st_length(geom2d) as distance from hkiroads where (target = #node# and (yksisuunta = 0 or yksisuunta = 2))
          union all
          select target as node, gid as edge, x2 as lon, y2 as lat, st_length(geom2d) as distance from hkiroads where (source = #node# and (yksisuunta = 0 or yksisuunta = 1))
        ) as nodes;
    </select>
</sqlMap>
